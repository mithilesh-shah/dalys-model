require(rstan)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
require(rstan)
install.packages("tranlateR")
install.packages("RSelenium")
install.packages("rvest")
install.packages("tidyverse")
install.packages("RSelenium")
install.packages("rvest")
require(RSelenium)
require(rvest)
require(tidyverse)
rD <- rsDriver(browser="firefox", port=4545L, verbose=F)
remDr <- rD[["client"]]
remDr$navigate("https://www.fcc.gov/media/engineering/dtvmaps")
zip <- "30308"
remDr$findElement(using = "id", value = "startpoint")$sendKeysToElement(list(zip))
remDr$findElements("id", "btnSub")[[1]]$clickElement()
remDr$findElements("id", "btnSub")[[1]]$clickElement()
remDr$findElements("id", "btnSub")[[1]]$clickElement()
exp(-10)
exp(5)
exp(1)
exp(0.5)
exp(0)
exp(0.0001)
exp(-1)
exp(-10)
exp(-10+1)
exp(-10-1)
log(0.000123)
log(0.1)
log(0.01)
log(0.001)
log(0.00001)
library(haven)
library(tidyverse)
df <- read_dta("/Users/julianashwin/Downloads/CPS_1985.dta")
df
df %>% mutate(sex = to_character(sex))
??to_character
library(labelled)
df %>% mutate(sex = to_character(sex))
df %>% mutate(sex = to_character(sex), race = to_character(race), occupation = to_character(occupation), manufacturing = as.numeric(sector), marr = as.numeric(marr))
tabyl(df$sector)
table(df$sector)
View(df)
df$sector
df %>% mutate(sex = to_character(sex), race = to_character(race), occupation = to_character(occupation), manufacturing = as.numeric(sector>0), marr = as.numeric(marr))
df %>% mutate(sex = to_character(sex), race = to_character(race), occupation = to_character(occupation), manufacturing = as.numeric(sector>0), marr = as.numeric(marr)) %>% select(-sector) %>%
write_csv("/Users/julianashwin/Downloads/CPS_1985.csv")
View(df)
df <- read_csv("/Users/julianashwin/Downloads/CPS_1985.csv")
df
table(df$manufacturing)
table(df$occupation)
setwd("/Users/julianashwin/Documents/GitHub/dalys-model/")
rm(list=ls())
library(ggplot2)
library(ggpubr)
library(readxl)
library(dplyr)
library(stringr)
library(reshape2)
library(tidyr)
source("functions.R")
all_mortality_df <- read_csv("clean_data/_archive/mortality_medium.csv")
all_mortality_df
# Import data
all_fertility_df <- read_csv("clean_data/_archive/fertility_rates.csv")
all_population_df <- read_csv("clean_data/_archive/population.csv")
all_mortality_df <- read_csv("clean_data/_archive/mortality_medium.csv")
all_disability_df <- read_csv("clean_data/_archive/disability_medium.csv")
cause_tree_df <- read_csv("clean_data/_archive/cause_definitions.csv")
income_transition_df <- read_csv("clean_data/_archive/income_transition_shares.csv")
locations <- unique(all_mortality_df$location)
# Starting point
loc_cols <- c("Global" = "black","World Bank High Income" = "forestgreen",
"World Bank Upper Middle Income" = "green", "World Bank Lower Middle Income" = "orange",
"World Bank Low Income" = "red")
fert_plt <- ggplot(filter(all_fertility_df, location %in% locations & year >= 2021)) + theme_bw() +
geom_line(aes(x = age, y = fertility_est, color = location, group = interaction(year, location))) +
geom_line(aes(x = age, y = fertility_med, color = location, group = interaction(year, location)),
linetype = "dashed", alpha = 0.2) +
scale_color_manual(values = loc_cols) + labs(x = "Age", y = "Fertility", color = "Region")
pop_plt <- ggplot(filter(all_population_df, location %in% locations & year <= 2021 & year >= 1990)) + theme_bw() +
geom_line(aes(x = age, y = population, color = location, group = interaction(year, location))) +
scale_color_manual(values = loc_cols) + labs(x = "Age", y = "Population", color = "Region")
mort_plt <- all_mortality_df %>%
filter(location %in% locations & year == 2019) %>%
ggplot() + theme_bw() +
geom_line(aes(x = age, y = mortality/100000, color = location)) +
scale_color_manual(values = loc_cols) + labs(x = "Age", y = "Mortality", color = "Region")
disab_plt <- all_disability_df %>%
filter(location %in% locations & year == 2019) %>%
ggplot() + theme_bw() +
geom_line(aes(x = age, y = disability/100000, color = location)) +
scale_color_manual(values = loc_cols) + labs(x = "Age", y = "Disability", color = "Region")
ggarrange(fert_plt, pop_plt, mort_plt, disab_plt, common.legend = T, nrow =1, legend = "right")
start_year <- 2021
end_year <- 2122
end_age <- 100
no_births <- FALSE
fertility_type <- "fertility_med"
growth_transitions <- TRUE
new_vars <- "none"
population_df
income_transition_df
View(income_transition_df)
start_year <- 2021
end_year <- 2122
end_age <- 100
no_births <- FALSE
fertility_type <- "fertility_med"
growth_transitions <- TRUE
new_vars <- "none"
loc_name <- "Regions"
# Select which region to focus on and which years to use as a starting point
if (loc_name == "Regions"){
population_df <- filter(all_population_df, location %in% c("World Bank High Income", "World Bank Low Income",
"World Bank Lower Middle Income", "World Bank Upper Middle Income"))
fertility_df <- filter(all_fertility_df, year >= start_year,
location %in% c("World Bank High Income", "World Bank Low Income",
"World Bank Lower Middle Income", "World Bank Upper Middle Income"))
} else {
population_df <- filter(all_population_df, location == loc_name)
fertility_df <- filter(all_fertility_df, location == loc_name, year >= start_year)
}
mortality_df <- create_mortality_df(all_mortality_df, loc_name = loc_name, start_year = start_year, end_year = end_year,
end_age = end_age, growth_transitions = TRUE,
income_transition_df = income_transition_df)
mortality_df %>%
ggplot() + facet_wrap(~location) +
geom_line(aes(x = age, y = mortality, group = year, color = year))
disability_df <- create_disability_df(all_disability_df, loc_name = loc_name, start_year = start_year, end_year = end_year,
end_age = end_age, growth_transitions = TRUE,
income_transition_df = income_transition_df)
disability_df %>%
ggplot() + facet_wrap(~location) +
geom_line(aes(x = age, y = disability, group = year, color = year))
growth_transitions
disability_df
forecasts_nogrowth <- forecast_dalys(population_df, fertility_df, mortality_df, disability_df, new = "none",
start_year = start_year, end_year = end_year, end_age = end_age,
no_births = no_births, fertility_type = "fertility_est", loc_name = loc_name,
growth_transitions = FALSE) %>% mutate(growth = "No Growth", fertility = "2021")
forecasts_growth <- forecast_dalys(population_df, fertility_df, mortality_df, disability_df, new = "none",
start_year = start_year, end_year = end_year, end_age = end_age,
no_births = no_births, fertility_type = "fertility_est", loc_name = loc_name,
growth_transitions = TRUE) %>% mutate(growth = "Growth", fertility = "2021")
forecasts_both <- rbind(forecasts_nogrowth, forecasts_growth)
forecasts_nogrowth <- forecast_dalys(population_df, fertility_df, mortality_df, disability_df, new = "none",
start_year = start_year, end_year = end_year, end_age = end_age,
no_births = no_births, fertility_type = "fertility_med", loc_name = loc_name,
growth_transitions = FALSE) %>% mutate(growth = "No Growth", fertility = "Medium")
forecasts_growth <- forecast_dalys(population_df, fertility_df, mortality_df, disability_df, new = "none",
start_year = start_year, end_year = end_year, end_age = end_age,
no_births = no_births, fertility_type = "fertility_med", loc_name = loc_name,
growth_transitions = TRUE) %>% mutate(growth = "Growth", fertility = "Medium")
forecasts_both <- rbind(forecasts_both, forecasts_nogrowth, forecasts_growth)
gc()
ggplot(forecasts_both) + theme_bw() + facet_wrap(vars(location, growth, fertility), scales = "free") +
geom_line(aes(x = age, y = population, color = year, group = year)) +
labs(x = "Age", y = "Population", color = "Year", title = loc_name)
dalys_infant4
gc()
gc()
